
public class InorderAndPreorder 
{
	//static TreeNode root;
	static int i=0;
	public static TreeNode buildTree(int in[], int pre[], int instart, int inend)
	{
		if(instart>inend)
		{
			return null;
		}
		TreeNode root=new TreeNode(pre[i++]);
		if(instart==inend)
			return root;
		
		if(instart==inend)
			return root;
		
		int Inindex=search(in,pre[i]);
		root.left=buildTree(in,pre,instart,Inindex-1);
		root.right=buildTree(in,pre,Inindex+1,inend);

		return root;
	}

	public static int search(int a[],int val)
	{
		int i;
		for(i=0;i<a.length;i++)
		{
			if(val==a[i])
			{
				return i;
			}
		}
		return i;
	}

	public static void inorder(TreeNode root)
	{
		if(root==null)
		{
			return ;
		}

		inorder(root.left);
		System.out.print(root.data+" ");
		inorder(root.right);
	}
	
	public static void main(String[] args) 
	{
		// TODO Auto-generated method stub
		int in[]={4,2,5,1,6,3};
		int pre[]={1,2,4,5,3,6};

		TreeNode root=buildTree(in, pre, 0, in.length-1);
		inorder(root);

	}

}
