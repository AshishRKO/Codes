
public class MergeKSorted 
{

	public static void merge(Node A, Node B)
	{
		if(A==null)
			return ;
		if(B==null)
			return ;
		Node temp1=A;
		Node temp2=B;
		Node dummy=new Node(0);
		Node res=dummy;
		while(temp1!=null && temp2!=null)
		{
			if(temp1.data<=temp2.data)
			{
				res.next=temp1;
				temp1=temp1.next;
			}
			else
			{
				res.next=temp2;	
				temp2=temp2.next;
			}
			res=res.next;
		}
	
		if(temp1!=null)
		{
			res.next=temp1;
		}
		if(temp2!=null)
		{
			res.next=temp2;
		}
		System.out.println("NOTHING");
		print(dummy.next);
	}
	

	public static Node mergeK(Node lists[])
	{
		return merging(lists,0,lists.length-1);
	}


	public static Node partition(Node list[],int s,int e)
	{
		if(s==e)
			return lists[s];
		if(s<e)
		{
			int q=(s+e)/2;
			Node first=partition(lists,s,q);
			Node second=partition(lists,q+1,e)

			Node res=merge(first,second);
			return res;
		}
		else
			return null;
	}

	public static void main(String[] args) {
		// TODO Auto-generated method stub

	}

}
