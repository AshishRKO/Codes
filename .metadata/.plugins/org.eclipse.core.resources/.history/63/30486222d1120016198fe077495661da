class ListNode
{
	int data;
	ListNode next;
	
	public ListNode(int data)
	{
		this.data=data;
	}
}

public class SortedListToTree 
{
    ListNode cur;
    public TreeNode sortedListToBST(ListNode start) 
    {
        cur=start;
        int n=count(start);
		return helper(n);   
    }
    
    public int count(ListNode start)
	{
		if(start==null)
			return 0;
		int c=0;
		ListNode temp=start;
		while(temp!=null)
		{
			temp=temp.next;
			c++;
		}
		return c;	
	}
	
	public TreeNode helper(int n)
	{
		if(n==0)
			return null;
		TreeNode root=new TreeNode(0);
		root.left=helper(n/2);
				
		root.data=cur.data;
		cur=cur.next;
		
		root.right=helper(n-n/2-1);
		return root;
	}
	public static void inorder(TreeNode root)
	{
		if(root==null)
		{
			return ;
		}

		inorder(root.left);
		System.out.print(root.data+" ");
		inorder(root.right);
	}
	
	public static void main(String[] args) {
		// TODO Auto-generated method stub
		ListNode A=new ListNode(1);
		A.next=new ListNode(2);
		A.next.next=new ListNode(3);
		A.next.next.next=new ListNode(4);
		A.next.next.next.next=new ListNode(5);
		A.next.next.next.next.next=new ListNode(6);
		
		TreeNode root= sortedListToBST(A);
		inorder(root);

	}

}
